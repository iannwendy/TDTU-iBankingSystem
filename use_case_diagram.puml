@startuml iBanking Tuition Payment System Use Case Diagram

!define RECTANGLE class

skinparam actorStyle awesome

title iBanking Tuition Payment System - Use Case Diagram

' Actors
actor "Customer" as CUSTOMER
actor "Student" as STUDENT
actor "Email Service" as EMAIL
actor "Cache Service" as CACHE
actor "University Billing System" as UNIV

' System Boundary
rectangle "iBanking System" {
    
    ' Authentication Use Cases
    usecase "Login" as UC_LOGIN
    usecase "Get User Profile" as UC_PROFILE
    usecase "Logout" as UC_LOGOUT
    
    ' Tuition Management Use Cases
    usecase "Lookup Student Tuition" as UC_LOOKUP
    usecase "Check Tuition Status" as UC_STATUS
    
    ' Payment Processing Use Cases
    usecase "Initiate Payment" as UC_INITIATE
    usecase "Generate OTP" as UC_GEN_OTP
    usecase "Send OTP Email" as UC_SEND_OTP
    usecase "Verify OTP" as UC_VERIFY_OTP
    usecase "Process Payment" as UC_PROCESS
    usecase "Resend OTP" as UC_RESEND_OTP
    usecase "Check Balance" as UC_CHECK_BAL
    usecase "Update Account Balance" as UC_UPDATE_BAL
    usecase "Mark Tuition as Paid" as UC_MARK_PAID
    
    ' Transaction Management Use Cases
    usecase "Create Transaction Record" as UC_CREATE_TXN
    usecase "Update Transaction Status" as UC_UPDATE_TXN
    usecase "View Transaction History" as UC_HISTORY
    usecase "Handle Transaction Expiry" as UC_EXPIRY
    
    ' Notification Use Cases
    usecase "Send Confirmation Email" as UC_CONFIRM_EMAIL
    usecase "Send Error Notifications" as UC_ERROR_EMAIL
    
    ' Security Use Cases
    usecase "Validate JWT Token" as UC_JWT
    usecase "Rate Limit OTP Attempts" as UC_RATE_LIMIT
    usecase "Acquire Resource Locks" as UC_LOCKS
}

' Customer Relationships
CUSTOMER --> UC_LOGIN
CUSTOMER --> UC_PROFILE
CUSTOMER --> UC_LOGOUT
CUSTOMER --> UC_LOOKUP
CUSTOMER --> UC_INITIATE
CUSTOMER --> UC_VERIFY_OTP
CUSTOMER --> UC_RESEND_OTP
CUSTOMER --> UC_HISTORY

' Student Relationships
STUDENT --> UC_LOOKUP
STUDENT --> UC_STATUS

' External Service Relationships
EMAIL --> UC_SEND_OTP
EMAIL --> UC_CONFIRM_EMAIL
EMAIL --> UC_ERROR_EMAIL
CACHE --> UC_GEN_OTP
CACHE --> UC_VERIFY_OTP
CACHE --> UC_RATE_LIMIT
UNIV --> UC_LOOKUP

' Include Relationships
UC_INITIATE ..> UC_CHECK_BAL : <<include>>
UC_INITIATE ..> UC_CREATE_TXN : <<include>>
UC_INITIATE ..> UC_GEN_OTP : <<include>>
UC_INITIATE ..> UC_SEND_OTP : <<include>>
UC_INITIATE ..> UC_LOCKS : <<include>>

UC_PROCESS ..> UC_UPDATE_BAL : <<include>>
UC_PROCESS ..> UC_MARK_PAID : <<include>>
UC_PROCESS ..> UC_UPDATE_TXN : <<include>>
UC_PROCESS ..> UC_CONFIRM_EMAIL : <<include>>

UC_VERIFY_OTP ..> UC_RATE_LIMIT : <<include>>
UC_VERIFY_OTP ..> UC_PROCESS : <<include>>

UC_RESEND_OTP ..> UC_GEN_OTP : <<include>>
UC_RESEND_OTP ..> UC_SEND_OTP : <<include>>

UC_LOOKUP ..> UC_STATUS : <<include>>

UC_LOGIN ..> UC_JWT : <<include>>

' Extend Relationships
UC_VERIFY_OTP ..> UC_EXPIRY : <<extend>>
UC_INITIATE ..> UC_ERROR_EMAIL : <<extend>>

' Notes
note right of UC_GEN_OTP : "6-digit OTP\n120s expiry\n5 max attempts"
note right of UC_LOCKS : "Prevents concurrent\npayment conflicts"
note right of UC_RATE_LIMIT : "Redis-based\nattempt tracking"

@enduml
